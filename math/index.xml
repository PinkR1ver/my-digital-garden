<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Maths on</title><link>https://pinktalk.online/math/</link><description>Recent content in Maths on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://pinktalk.online/math/index.xml" rel="self" type="application/rss+xml"/><item><title>Cantor expansion</title><link>https://pinktalk.online/Math/discrete_mathematics/set_theory/cantor_expansion/cantor_expansion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pinktalk.online/Math/discrete_mathematics/set_theory/cantor_expansion/cantor_expansion/</guid><description>康托展开（Cantor expansion），也称为康托编码（Cantor encoding），是由德国数学家乔治·康托（Georg Cantor）于19世纪末提出的一种数学技术。它用于将一个无限序列的数字（或有限序列的数字）映射到一个唯一的实数，从而实现序列的编码和排序。
Objective 康托展开与逆展开是将全排列和它的字典序互相转化的两种算法
Application 作为枚举问题的hash function Step by Step Deriving Cantor Expansion Lemma1 and Lemma2 以DFS生成的4阶全排列为例~~(no this algorithm detail here)~~，带编号：</description></item><item><title>Cauchy Principal Value</title><link>https://pinktalk.online/Math/real_analysis/cauchy_principal_value/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pinktalk.online/Math/real_analysis/cauchy_principal_value/</guid><description>Notation $$ \text{p.v.} \int_{-\infty}^{\infty} f(x)dx = \lim_{a\rightarrow+\infty} \int_{-a}^{a} f(x) dx = \lim_{a\rightarrow+\infty}[f(a) - f(-a)] $$
the Cauchy principal value is the method for assigning values to certain improper integrals which would otherwise be undefined.</description></item><item><title>Math MOC</title><link>https://pinktalk.online/Math/MOC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pinktalk.online/Math/MOC/</guid><description>Statistics Basic concept Quantile Discrete mathematics Set theory Cantor Expansion Optimization Problem Quadratic Programming</description></item><item><title>Quadratic Programming</title><link>https://pinktalk.online/Math/optimization_problem/Quadratic_Programming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pinktalk.online/Math/optimization_problem/Quadratic_Programming/</guid><description>Why I write this note? 猪熊一波. _帮女朋友降维打击领导！哔哩哔哩_bilibili. https://www.bilibili.com/video/BV1ZN411T7c9/. Accessed 30 Nov. 2023.
Tips [!tip] &amp;ldquo;Programming&amp;rdquo; in this context refers to a formal procedure for solving mathematical problems.</description></item><item><title>Quantile</title><link>https://pinktalk.online/Math/Statistics/Basic/Quantile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pinktalk.online/Math/Statistics/Basic/Quantile/</guid><description>分位数（英语：Quantile），亦称分位点，是指用分割点（cut point）将一个随机变量的概率分布范围分为几个具有相同概率的连续区间。分割点的数量比划分出的区间少1，例如3个分割点能分出4个区间。
常见的分位数包括中位数（二分位数）、四分位数（四分位数）和百分位数。
中位数：中位数是将一组数据按照大小排序后，处于中间位置的值。将数据分成两部分，有一半的观察值小于中位数，另一半的观察值大于中位数。
四分位数：四分位数将数据分成四个等分，分别是下四分位数（25%分位数）、中位数（50%分位数）和上四分位数（75%分位数）。下四分位数是将数据排序后，处于25%位置的值；中位数是处于50%位置的值；上四分位数是处于75%位置的值。
百分位数：百分位数将数据分成100个等分，可以表示某个特定百分比处的数据值。例如，75%的百分位数表示将数据排序后，处于75%位置的值</description></item></channel></rss>